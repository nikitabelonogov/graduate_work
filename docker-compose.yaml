version: '2.1'

services:
  flask_application:
    container_name: flask_application
    build:
      context: ./MyFlaskApp
      args:
        workspace: "/workspace"
        codespace: "./"
    image: graduate_work/flask_application:latest
    environment:
      workspace: "/workspace"
      codespace: "./"
      HOST: "0.0.0.0"
      PORT: "8080"
      DLIB_PATH: "/root/openface/models/dlib/shape_predictor_68_face_landmarks.dat"
      NETWORK_MODEL: "/root/openface/models/openface/nn4.small2.v1.t7"
      DATA_URL: "https://s3-eu-west-1.amazonaws.com/graduate-work/data.pkl"
      DATA_PATH: "/workspace/data"
    ports:
      - "80:8080/tcp"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/"]
      interval: 30s
      timeout: 15s
      retries: 3
    networks:
      - service-network

  telegram_bot:
    container_name: telegram_bot
    build:
      context: ./MyTelegramBot
      args:
        workspace: "/workspace"
        codespace: "./"
    image: graduate_work/telegram_bot:latest
    environment:
      workspace: "/workspace"
      codespace: "./"
      TOKEN: "${TOKEN}"
      HOST: "flask_application"
      PORT: "8080"
    depends_on:
      flask_application:
        condition: service_healthy
    networks:
      - service-network

networks:
  service-network:
    driver: bridge
